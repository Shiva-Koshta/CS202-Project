We have implemented the lexer and parser for B-- using flex and bison.

1.Dependencies:

To compile and run the B-- lexer and parser, you will need the following tools installed:

Flex (version 2.6 or higher)
Bison (version 3.0 or higher)
C/C++ compiler (such as gcc or clang)

2.Building and Running:

To build the lexer and parser, run the following commands:

lex BMM_Scanner.l
yacc -d BMM_Parser.y
cc lex.yy.c y.tab.c -o bmm
./bmm input.bmm

The input source code will be given from a file named input.bmm. We can also give any other file name in the command line.


After running above instrcutions, our program will show if there are errors in the source code or not.

3.Extras:

Our B-- language supports various arithmatic operators like +, -, /, *, Logical operaters like OR, AND, NOT, XOR, relational operators like =,<,>,<=,>= ,<> also there are various keywords which we can directly use.

We have also made a BMM_Scanner_Tester.l file, that can be standalone used to check the tokens generated by our lexer.
We can use the following commands to test the lexer:
lex BMM_Scanner_Tester.l
cc lex.yy.c -o bmm_scanner -ll
./bmm_scanner input.bmm
